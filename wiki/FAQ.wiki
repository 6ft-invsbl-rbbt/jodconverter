#summary Frequently Asked Questions

= Frequently Asked Questions =

 Note: whenever _ !OpenOffice.org _ (_OOo_ for short) is mentioned, this can generally be interpreted to include any office suite derived from OOo such as _ !StarOffice _.

 # *Do I really need to install !OpenOffice.org in order to use JODConverter?*
  Yes. In fact, JODConverter simply automates OOo operations; all actual conversions are performed by OOo.
 # *Do I really really need to install !OpenOffice.org? There's no way to install only a few libraries/DLLs instead?*
  You do need a complete OOo installation. At most you can omit Base and a few optional component when installing.
  Splitting OOo conversion filters into independent components is one of the goals of an OOo sub-project called [http://odftoolkit.openoffice.org ODF Toolkit], but don't hold your breath.
 # *How well does it convert format X to format Y?*
  Different people have different requirements/expectations. Why don't you just find out for yourself? Since JODConverter simply automates OOo conversions, you don't even need to install JODConverter to do some tests, you just need OOo. Manually open a document in format X with OOo, and save it as (or export it to) format Y. Voil√†! No tricks, no gimmicks.
 # *When converting from format X to Y something in the output is not quite right*
  As mentioned, JODConverter simply automates OOo conversions. 90% of the problems reported on the JODConverter group are actually OOo problems. Please try performing a manual conversion using OOo alone as explained in the previous answer. If you still get the same incorrect result, please report it an [http://qa.openoffice.org/issue_handling/project_issues.html OOo issue].
 # *When converting to HTML using the webapp images are missing*
  HTML is a bit special. Converting to most other formats results in a single file, but converting to HTML OOo can generates multiple files: one HTML file plus various image files (OOo puts them in the same directory as the HTML one). The sample webapp has no special support for HTML output (in fact HTML not listed as an option in the index page), it just does what works for other formats i.e. returns a single file: the HTML one. Hence images are lost. The webapp does not even attempt to provide a solution for this problem, because it depends on your particular requirements. In some cases you may want to package HTML and images into a ZIP file in order to return a single file. In other cases you may want to copy HTML and images to a public path on your web server to access them directly. In all cases you should think about security implications. It's up to you.